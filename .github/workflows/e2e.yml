name: e2e

on:
  workflow_dispatch:
  push:
    branches: 
      - '*'
    paths:
      - 'api-todo/**'
      - 'client-todo/**'
  pull_request:
    branches: 
      - 'main'
    paths:
      - 'api-todo/**'
      - 'client-todo/**'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:

      # Start environment
      - uses: actions/checkout@v2

      - name: Start Mongoose database
        run: docker-compose -f "docker-compose.yml" up -d mongodb

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install jq
        run: |
          sudo apt-get install jq

      # App versions
      - name: API-todo version
        run: |
          cat api-todo/package.json | jq .version

      - name: Client-todo version
        run: |
          cat client-todo/package.json | jq .version

      - name: Playwright API test version
        run: |
          cat api-todo-test/package.json | jq .version

      # Start apps
      - name: Start API 
      - run: |
          cd api-todo
          npm ci
          npm run lint:fix
          npm run build
          npm run start
        env: # Add your environment variables here
          DATABASE_URI: mongodb://mongo:MongoPass@localhost:27017/
          DATABASE_USE_MONGODB: true
          NODE_ENV: development

      - name: Start Client
      - run: |
          cd client-todo
          npm ci
          npm run lint:fix
          npm run build
          npm run dev
        env: # Add your environment variables here
          VITE_API_URL: http://localhost:3000
          NODE_ENV: development

      # Run end to end tests
      - name: Run API Playwright tests
        run: |
          cd api-todo-test
          npm install
          npm run test
        env: # Add your environment variables here
          API_TODO_ENDPOINT: http://localhost:3000
          NODE_ENV: development

      # Stop environment
      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down