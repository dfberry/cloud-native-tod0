name: devx

# Verify local developer experience works
# Docker compose is used to start the various services

on:
    workflow_dispatch:
    push:
      branches: 
        - '*'
    pull_request:
      branches: 
        - '*'
jobs:
    devx-api:
  
      runs-on: ubuntu-latest
  
      strategy:
        matrix:
          node-version: [18.x]
  
      steps:
  
        # Start environment
        - uses: actions/checkout@v2
  
        - name: DEVX-Start database and api
          run: |
            docker compose -f "docker-compose.yml" up -d --build mongodb api
  
        - name: DEVX-Network
          run: |
            docker network ls

        - name: Print service status
          run: docker ps | grep api

        # - name: Print network configuration
        #   run: docker network inspect api

        - name: DEVX-List containers
          run: docker ps -a 

        - name: DEVX-Logs
          run: docker logs api

        - name: Get Docker IP - api
          id: get_ip
          run: |
            docker_ip=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' api)
            echo "Docker IP: $docker_ip"
            echo "::set-output name=docker_ip::$docker_ip"

        - name: Get Docker IP - mongod
          id: get_ip_db
          run: |
            docker_ip_db=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mongodb)
            echo "Docker IP: $docker_ip_db"
            echo "::set-output name=docker_ip_db::$docker_ip_db"


        # verify result is in 200 range - doesn't require database
        - name: DEVX-cURL to Root
          continue-on-error: true
          run: |
            curl http://localhost:3000/ 
  
        # Collect and print container logs
        - name: DEVX-Collect logs
          if: always()
          run: |
            docker logs api > api_logs.txt
            cat api_logs.txt

        - name: DEVX-Upload logs
          if: always()
          uses: actions/upload-artifact@v2
          with:
            name: api_logs
            path: api_logs.txt

        # Stop environment
        - name: DEVX-Stop containers
          if: always()
          run: docker-compose -f "docker-compose.yml" down
