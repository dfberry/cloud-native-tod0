{
  "name": "api-todo",
  "version": "1.0.4",
  "description": "Copilot: GitHub Copilot: Here's a step-by-step guide to building a simple Todo microservice using Node.js and TypeScript:",
  "main": "index.js",
  "scripts": {
    "pretest": "jest --clearCache npm run lint:fix && npm run build && npm run postbuild",
    "test": "cross-env NODE_ENV=test jest --runInBand --no-cache --detectOpenHandles --forceExit --coverage",
    "test:withlogs": "cross-env NODE_ENV=testwithlogs jest --runInBand --no-cache --detectOpenHandles --forceExit --coverage",
    "dev": "ts-node src/start.ts",
    "start": "cross-env NODE_ENV=production node dist/start.js",
    "start:debug": "cross-env NODE_ENV=dev node -r ts-node/register src/start.ts",
    "postbuild": "ncp ./src/openapi.yaml ./dist/openapi.yaml",
    "build": "tsc",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "clean": "rm .env && rm -rf dist && rm -rf coverage && rm -rf logs",

    "docker:build": "bash scripts/build-image.sh",
    "docker:run": "bash scripts/run-image.sh"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "body-parser": "^1.20.2",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "express": "^4.18.2",
    "http-status-codes": "^2.3.0",
    "joi": "^17.11.0",
    "swagger-ui-express": "^5.0.0",
    "winston": "^3.11.0",
    "yamljs": "^0.3.0"
  },
  "devDependencies": {
    "@types/body-parser": "^1.19.4",
    "@types/cors": "^2.8.15",
    "@types/express": "^4.17.20",
    "@types/jest": "^29.5.7",
    "@types/node": "^20.8.10",
    "@types/supertest": "^2.0.15",
    "@typescript-eslint/eslint-plugin": "^6.9.1",
    "@typescript-eslint/parser": "^6.9.1",
    "eslint": "^8.53.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "ncp": "^2.0.0",
    "prettier": "^3.0.3",
    "supertest": "^6.3.3",
    "ts-node": "^10.9.1",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2"
  }
}
